# Environment variables
DIR_NAME := $(shell basename "$(PWD)")

# Define the targets
all: build_poetry build_hooks clean gh_repo_setup
.PHONY: all

# Infer poetry env name from directory (project) name
build_poetry:
	@echo "Building your '${DIR_NAME}' project with Poetry..."
	@if poetry env list | grep -q "${DIR_NAME}"; then \
		echo "'${DIR_NAME}' Poetry environment already exists...skipping..."; \
    else \
		poetry config virtualenvs.in-project true; \
		poetry install --no-root; \
		echo "Built '${DIR_NAME}' Poetry environment"; \
    fi

# Using pre-commit framework: https://pre-commit.com/index.html
# Extension of pre-commit framework
build_hooks:
	@echo ""
	@echo "Setting up pre-commit hooks..."
	if [ ! -d ".git" ]; then \
        echo "...initializing Git..."; \
        git init; \
        git add .; \
        git commit -m "Initial commit"; \
    fi && \
	poetry run pre-commit install
	@echo "Pre-commit hooks installed successfully."

# Target to clean up generated files
clean:
	@echo "Cleaning up temporary files..."
	@rm -rf __pycache__ .pytest_cache .tox .coverage .mypy_cache .nox .coverage
	@rm images/demo.yml images/demo.gif
	poetry run pre-commit clean
	@files_to_remove=$$(find docs -type f | grep -v '0_overview.md'); \
	for file in $$files_to_remove; do \
		rm -f $$file; \
    done
	@echo "Cleanup complete."

# Use the GitHub ClI to automatically push this project to the remote server
# Initialize GitHub repository as private
gh_repo_setup:
	@echo "...pushing to GitHub..."
	@if ! command -v gh >/dev/null 2>&1; then \
      echo "Error: GitHub CLI is not installed. Please install it from https://cli.github.com/"; \
	  echo "Once installed, please run 'gh auth login'"; \
      exit 1; \
    fi
	@if ! gh repo view "${DIR_NAME}" >/dev/null 2>&1; then \
      echo "Creating project on GitHub..."; \
	  gh repo create "${DIR_NAME}" --private; \
	  git remote add origin {{ github_repo_url }}; \
	  git push -u origin main; \
	else \
      echo "Repository called '${DIR_NAME}' already exists on GitHub...skipping..."; \
	  git remote add origin {{ github_repo_url }} 2> /dev/null || true; \
	  git push; \
    fi; \
	echo "Done"
